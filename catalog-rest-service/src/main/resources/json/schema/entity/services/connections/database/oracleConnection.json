{
  "$id": "https://open-metadata.org/schema/entity/services/connections/database/oracleConnection.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "OracleConnection",
  "description": "Oracle Database Connection Config",
  "type": "object",
  "javaType": "org.openmetadata.catalog.services.connections.database.OracleConnection",
  "definitions": {
    "oracleType": {
      "description": "Service type.",
      "type": "string",
      "enum": [
        "Oracle"
      ],
      "default": "Oracle"
    },
    "oracleScheme": {
      "description": "SQLAlchemy driver scheme options.",
      "type": "string",
      "enum": [
        "oracle+cx_oracle"
      ],
      "default": "oracle+cx_oracle"
    }
  },
  "properties": {
    "type": {
      "description": "Service Type",
      "$ref": "#/definitions/oracleType",
      "default": "Oracle"
    },
    "scheme": {
      "description": "SQLAlchemy driver scheme options.",
      "$ref": "#/definitions/oracleScheme",
      "default": "oracle+cx_oracle"
    },
    "username": {
      "description": "username to connect  to the Oracle. This user should have privileges to read all the metadata in Oracle.",
      "type": "string"
    },
    "password": {
      "description": "password to connect  to the Oracle.",
      "type": "string"
    },
    "hostPort": {
      "description": "Host and port of the Oracle.",
      "type": "string"
    },
    "database": {
      "description": "Database of the data source. This is optional parameter, if you would like to restrict the metadata reading to a single database. When left blank , OpenMetadata Ingestion attempts to scan all the databases in Oracle.",
      "type": "string"
    },
    "connectionOptions": {
      "description": "Additional connection options that can be sent to service during the connection.",
      "type": "object"
    },
    "connectionArguments": {
      "description": "Additional connection arguments such as security or protocol configs that can be sent to service during connection.",
      "type": "object"
    },
    "supportedPipelineTypes": {
      "description": "Supported Metadata Extraction Pipelines.",
      "type": "string",
      "enum": ["Metadata"],
      "javaEnums": [
        {
          "name": "Metadata"
        }
      ]
    }
  },
  "additionalProperties": false
}
